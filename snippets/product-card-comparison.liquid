{%- comment -%}
----------------------------------------------------------------------------------------------------------------------
PRODUCT CARD COMPONENT
----------------------------------------------------------------------------------------------------------------------

This component is used in collection and featured collection to render a single product as a card

********************************************
Supported variables
********************************************

* product: the product to render
* show_rating: show or not the rating. If nothing is set, the theme uses the default product card setting
* show_vendor: show or not the vendor. If nothing is set, the theme uses the default product card setting
* show_quick_buy: show or not the quick buy. If nothing is set, the theme uses the default product card setting
* show_secondary_image: show or not the secondary image. If nothing is set, the theme uses the default product card setting
* show_swatches: allow to force hiding swatches. If nothing is set, it will default to the default card strategy
* stacked: indicate if the product is in stack mode
* reveal: if set to true the item will be revealed in a stacked mode
* background: the background to use for the product card (if none is passed then the one from the global setting is used)
* text_color: the text color to use for the product card (if none is passed then the one from the global setting is used)
* text_alignment: can be "center". If nothing is set, the theme uses the default product card setting
{%- endcomment -%}

{%- assign show_secondary_image = show_secondary_image | default: settings.show_secondary_image, allow_false: true -%}

{%- if stacked and section.settings.products_per_row_mobile == '2' -%}
  {%- assign mobile_reduced = true -%}
{%- endif -%}

{%- assign section_background = section.settings.background_gradient | default: section.settings.background | default: settings.background -%}
{%- assign card_background = background | default: settings.product_card_background -%}
{%- assign card_text_color = text_color | default: settings.product_card_text_color -%}

{%- if section_background != 'rgba(0,0,0,0)' and card_background != 'rgba(0,0,0,0)' and section_background != card_background -%}
  {%- assign card_class = 'product-card ' -%}
{%- else -%}
  {%- assign card_class = 'product-card product-card--blends ' -%}
{%- endif -%}

{%- if show_secondary_image and product.media.size > 1 -%}
  {%- assign card_class = card_class | append: 'product-card--show-secondary-media' -%}
{%- endif -%}

<product-card handle="{{ product.handle | escape }}" {% render 'surface', class: card_class, background: card_background, text_color: card_text_color %}>
  {%- comment -%}
  --------------------------------------------------------------------------------------------------------------------
  PRODUCT BADGES
  --------------------------------------------------------------------------------------------------------------------
  {%- endcomment -%}

  {%- if product.media.size > 0 -%}
    {%- render 'product-badges', types: 'custom-text,discount', product: product, class: 'product-card__badge-list', placement: 'product-card' -%}
  {%- endif -%}

  {%- comment -%}
  --------------------------------------------------------------------------------------------------------------------
  PRODUCT MEDIA
  --------------------------------------------------------------------------------------------------------------------
  {%- endcomment -%}

  {%- if product.media.size > 0 -%}
    {%- assign first_variant = product.first_available_variant -%}
    {%- unless first_variant and first_variant.available -%}
      {%- assign first_variant = product -%}
    {%- endunless -%}
    <div class="product-card__figure">
      <a href="{{ product.url }}" data-instant>
        {%- capture sizes -%}
          {%- if stacked -%}
            (max-width: 699px) calc(100vw / {{ section.settings.products_per_row_mobile }} - 40px), (max-width: 1200px) calc(100vw / {{ 3 | at_most: section.settings.products_per_row_desktop }} - 64px), calc(min(100vw - 96px, {{ settings.page_width }}px) / {{ section.settings.products_per_row_desktop }} - (24px / {{ section.settings.products_per_row_desktop }} * {{ section.settings.products_per_row_desktop | minus: 1 }}))
          {%- else -%}
            (max-width: 699px) 74vw, (max-width: 999px) 38vw, calc(min(100vw - 96px, {{ settings.page_width }}px) / {{ section.settings.products_per_row_desktop }} - (24px / {{ section.settings.products_per_row_desktop }} * {{ section.settings.products_per_row_desktop | minus: 1 }}))
          {%- endif -%}
        {%- endcapture -%}

        {%- capture main_image_classes -%}product-card__image product-card__image--primary {% if settings.product_image_aspect_ratio contains 'crop' %}object-fill-safe{% endif %} aspect-{{ settings.product_image_aspect_ratio | split: '_' | first }}{%- endcapture -%}
        {% comment %} {{- product.featured_media | image_url: width: product.featured_media.width | image_tag: loading: 'lazy', sizes: sizes, widths: '200,300,400,500,600,700,800,1000,1200,1400,1600,1800', class: main_image_classes -}} {% endcomment %}
        {{- first_variant.featured_media | image_url: width: first_variant.featured_media.width | image_tag: loading: 'lazy', sizes: sizes, widths: '200,300,400,500,600,700,800,1000,1200,1400,1600,1800', class: main_image_classes -}}

        {%- if show_secondary_image and product.media.size > 1 -%}
          {% comment %} {%- assign next_media = product.media[product.featured_media.position] | default: product.media[1] -%} {% endcomment %}
          {%- assign next_media = product.media[first_variant.featured_media.position] | default: product.media[1] -%}
          {{- next_media | image_url: width: next_media.width | image_tag: class: 'product-card__image product-card__image--secondary object-fill', loading: 'lazy', fetchpriority: 'low', sizes: sizes, widths: '200,300,400,500,600,700,800,1000,1200,1400,1600,1800' -}}
        {%- endif -%}
      </a>
    </div>
  {%- endif -%}

  {%- comment -%}
  --------------------------------------------------------------------------------------------------------------------
  PRODUCT INFO
  --------------------------------------------------------------------------------------------------------------------
  {%- endcomment -%}

  <div class="product-card__info">
    <div class="product-card__info-top v-stack w-full">
      <span class="product-card__title text-sm"><a href="{{ product.url }}" class="fw-500" data-instant>{{ product.title }}</a></span>

      <div class="product-card__prices text-xs">
        {%- render 'price-list', product: product -%}
      </div>
    </div>

    <div class="product-card__compare">
      <table class="product-card__compare-table">
        <tbody>
          <tr>
            <td class="font-monospaced">
              {{ 'product.compare.designed_for' | t }}
            </td>
            <td>
              {{ product.metafields.accentuate.data_designed_for }}
            </td>
          </tr>
          <tr>
            <td class="font-monospaced">
              {{ 'product.compare.use_case' | t }}
            </td>
            <td>
              {{ product.metafields.accentuate.data_use_case }}
            </td>
          </tr>
          <tr>
            <td class="font-monospaced">
              {{ 'product.compare.weight' | t }}
            </td>
            <td>
              {{ product.metafields.accentuate.data_weight }}
            </td>
          </tr>
          <tr>
            <td class="font-monospaced">
              {{ 'product.compare.fabric' | t }}
            </td>
            <td>
              {{ product.metafields.accentuate.data_fabric }}
            </td>
          </tr>
          <tr>
            <td class="font-monospaced">
              {{ 'product.compare.stretch' | t }}
            </td>
            <td>
              {{ product.metafields.accentuate.data_stretch }}
            </td>
          </tr>
          <tr>
            <td class="font-monospaced">
              {{ 'product.compare.fit' | t }}
            </td>
            <td>
              {{ product.metafields.accentuate.data_fit }}
            </td>
          </tr>
          <tr>
            <td class="font-monospaced">
              {{ 'product.compare.colors' | t }}
            </td>
            <td>
              {%- assign color_label_list = 'general.label.color' | t | replace: ', ', ',' | downcase | split: ',' -%}

              {%- for color_label in color_label_list -%}
                {%- if product.options_by_name[color_label] != blank -%}
                  {%- assign product_option = product.options_by_name[color_label] -%}

                  <fieldset class="product-card__swatch-list h-stack wrap {% if settings.color_swatch_style == 'rectangle' %}gap-2.5{% else %}gap-0.5{% endif %}" data-option-position="{{ product_option.position }}">
                    {%- for option_value in product_option.values -%}
                      {%- render 'swatch' with 'color', href: product.url, value: option_value, size: 'sm' -%}
                    {%- endfor -%}
                  </fieldset>
                {%- endif -%}
              {%- endfor -%}
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>

  {%- if show_button -%}
    {%- assign button_label = 'product.general.shop_now' | t -%}
    {% render 'button', custom_class: 'product-card__compare-cta', content: button_label, href: product.url, size: 'sm', stretch: true %}
  {%- endif -%}
</product-card>